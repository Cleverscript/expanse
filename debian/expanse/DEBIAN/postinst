#!/bin/sh
# postinst script for expanse
#
# see: dh_installdeb(1)

# set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)
    while true
    do
        read -p "Enter hostname (mysite.com): " EXPHOSTNAME
        if [ ! -z "$EXPHOSTNAME" ]; then

                # set vars
                EXPHOSTCONFSRC="expanse.conf"
                EXPHOSTPATH=/var/www/${EXPHOSTNAME}
                EXPNGINXCONFPATH=/etc/nginx/sites-available
                EXPNGINXLNCONFPATH=/etc/nginx/sites-enabled/${EXPHOSTNAME}.conf

                # create host folder from server
                if [ ! -d ${EXPHOSTPATH} ]; then
                    mkdir ${EXPHOSTPATH}
                fi

                if [ -d $EXPHOSTPATH ]; then

                        echo "Success - create host directory /var/www/${EXPHOSTNAME}"

                        # create host index file
                        echo "<?php echo 'Powered by PHP v' . phpversion(); ?>" > ${EXPHOSTPATH}/index.php

                        # create config dir
                        if [ ! -d "/etc/expanse" ]; then
                                mkdir "/etc/expanse"
                        fi

                        # write hostname to config file
                        if [ ! -f "/etc/expanse/config_expanse" ]; then
                                touch /etc/expanse/config_expanse
                        fi
                        
                        echo ${EXPHOSTNAME} > /etc/expanse/config_expanse

                        EXPHOSTCONF=${EXPNGINXCONFPATH}/${EXPHOSTCONFSRC}

			# replace hostname in config file NGINX
			if [ -f $EXPHOSTCONF ]; then
				sed -i "s|EXPHOSTNAME|$EXPHOSTNAME|g" ${EXPNGINXCONFPATH}/${EXPHOSTCONFSRC}
				mv $EXPHOSTCONF ${EXPNGINXCONFPATH}/${EXPHOSTNAME}.conf
				
				# create symlink
                       		ln -s ${EXPNGINXCONFPATH}/${EXPHOSTNAME}.conf ${EXPNGINXLNCONFPATH}
				
                                # reload NGINX configs
				NGINXT=$(sudo nginx -t >/dev/null ; echo $?)
				if [ $NGINXT -eq 0 ]; then
                                        mkdir ${EXPHOSTPATH}
					systemctl reload nginx
                                        #systemctl status nginx
				else
					echo "Error - nginx: configuration files test failed!"
                                        exit 1
                                fi
				
			else
				echo "Warning - file not exist ${EXPHOSTCONF}"
                                exit 1
			fi
                else
                        echo "Error - fail create host directory /var/www/${EXPHOSTNAME}"
                        exit 1
                fi
                break
        else
                echo "Failure - hostname must not be empty!"
        fi

        break
    done
    ;;	
    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
